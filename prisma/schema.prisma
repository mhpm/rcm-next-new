generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Churches {
  id               String           @id @default(cuid())
  name             String
  slug             String           @unique
  createdAt        DateTime         @default(now()) @map("created_at")
  updatedAt        DateTime         @updatedAt @map("updated_at")
  memberMinistries MemberMinistry[]
  members          Members[]
  ministries       Ministries[]

  @@map("churches")
}

model Members {
  id           String           @id @default(cuid())
  firstName    String           @map("first_name")
  lastName     String           @map("last_name")
  email        String           @unique
  phone        String?
  age          Int?
  street       String?
  city         String?
  state        String?
  zip          String?
  country      String?          @default("MÃ©xico")
  birthDate    DateTime?        @map("birth_date")
  baptismDate  DateTime?        @map("baptism_date")
  role         MemberRole       @default(MIEMBRO)
  gender       Gender           @default(MASCULINO)
  pictureUrl   String?          @map("picture_url")
  notes        String?
  passwordHash String?          @map("password_hash")
  church_id    String
  createdAt    DateTime         @default(now()) @map("created_at")
  updatedAt    DateTime         @updatedAt @map("updated_at")
  ministries   MemberMinistry[]
  church       Churches         @relation(fields: [church_id], references: [id], onDelete: Cascade)

  @@index([email])
  @@index([role])
  @@index([createdAt])
  @@index([church_id])
  @@map("members")
}

model Ministries {
  id          String           @id @default(cuid())
  name        String
  description String?
  church_id   String
  createdAt   DateTime         @default(now()) @map("created_at")
  updatedAt   DateTime         @updatedAt @map("updated_at")
  members     MemberMinistry[]
  church      Churches         @relation(fields: [church_id], references: [id], onDelete: Cascade)

  @@unique([name, church_id])
  @@index([church_id])
  @@map("ministries")
}

model MemberMinistry {
  id         String     @id @default(cuid())
  memberId   String     @map("member_id")
  ministryId String     @map("ministry_id")
  church_id  String
  createdAt  DateTime   @default(now()) @map("created_at")
  updatedAt  DateTime   @updatedAt @map("updated_at")
  church     Churches   @relation(fields: [church_id], references: [id], onDelete: Cascade)
  member     Members    @relation(fields: [memberId], references: [id], onDelete: Cascade)
  ministry   Ministries @relation(fields: [ministryId], references: [id], onDelete: Cascade)

  @@unique([memberId, ministryId])
  @@index([church_id])
  @@map("member_ministries")
}

enum MemberRole {
  MIEMBRO
  SUPERVISOR
  LIDER
  ANFITRION
  PASTOR
  TESORERO

  @@map("member_role")
}

enum Gender {
  MASCULINO
  FEMENINO

  @@map("gender")
}
